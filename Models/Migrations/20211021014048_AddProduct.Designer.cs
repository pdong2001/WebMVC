// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Models.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211021014048_AddProduct")]
    partial class AddProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.CanBo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSrc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CanBos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Address = "Hưng Yên - Việt Nam",
                            Name = "Cán bộ 1",
                            PhoneNumber = "0987654321"
                        },
                        new
                        {
                            ID = 2,
                            Address = "Hưng Yên - Việt Nam",
                            Name = "Cán bộ 2",
                            PhoneNumber = "0987654321"
                        },
                        new
                        {
                            ID = 3,
                            Address = "Hưng Yên - Việt Nam",
                            Name = "Cán bộ 3",
                            PhoneNumber = "0987654321"
                        },
                        new
                        {
                            ID = 4,
                            Address = "Hưng Yên - Việt Nam",
                            Name = "Cán bộ 4",
                            PhoneNumber = "0987654321"
                        },
                        new
                        {
                            ID = 5,
                            Address = "Hưng Yên - Việt Nam",
                            Name = "Cán bộ 5",
                            PhoneNumber = "0987654321"
                        });
                });

            modelBuilder.Entity("Models.Entity.Article", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TypeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("TypeID");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Models.Entity.ArticleType", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ArticleTypes");
                });

            modelBuilder.Entity("Models.Entity.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descriptionn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Descriptionn = "Sản phẩm số 1",
                            ImagePath = "",
                            Name = "Sản phẩm 1",
                            Price = 100000
                        },
                        new
                        {
                            ID = 2,
                            Descriptionn = "Sản phẩm số 2",
                            ImagePath = "",
                            Name = "Sản phẩm 2",
                            Price = 100000
                        },
                        new
                        {
                            ID = 3,
                            Descriptionn = "Sản phẩm số 3",
                            ImagePath = "",
                            Name = "Sản phẩm 3",
                            Price = 100000
                        },
                        new
                        {
                            ID = 4,
                            Descriptionn = "Sản phẩm số 4",
                            ImagePath = "",
                            Name = "Sản phẩm 4",
                            Price = 100000
                        },
                        new
                        {
                            ID = 5,
                            Descriptionn = "Sản phẩm số 5",
                            ImagePath = "",
                            Name = "Sản phẩm 5",
                            Price = 100000
                        });
                });

            modelBuilder.Entity("Models.Entity.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Domicile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistryDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("915f719f-c2fb-47c2-b268-84901cba939f"),
                            AccName = "Taikhoan1",
                            Address = "Hưng Yên - Việt Nam",
                            DateOfBirth = new DateTime(1980, 9, 26, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(2127),
                            Domicile = "Việt nam",
                            Email = "Email.NguoiDung@mail.mail",
                            Name = "Người dùng 1",
                            PhoneNumber = "0987654321",
                            RegistryDate = new DateTime(2021, 10, 21, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(6813)
                        },
                        new
                        {
                            ID = new Guid("13cd80ab-841c-4a19-a85c-c1169b0ffac1"),
                            AccName = "Taikhoan2",
                            Address = "Hưng Yên - Việt Nam",
                            DateOfBirth = new DateTime(1980, 9, 26, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(7514),
                            Domicile = "Việt nam",
                            Email = "Email.NguoiDung@mail.mail",
                            Name = "Người dùng 2",
                            PhoneNumber = "0987654321",
                            RegistryDate = new DateTime(2021, 10, 21, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(7526)
                        },
                        new
                        {
                            ID = new Guid("73e84b7c-8c09-4d8a-80da-6919046ba39f"),
                            AccName = "Taikhoan3",
                            Address = "Hưng Yên - Việt Nam",
                            DateOfBirth = new DateTime(1980, 9, 26, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(7532),
                            Domicile = "Việt nam",
                            Email = "Email.NguoiDung@mail.mail",
                            Name = "Người dùng 3",
                            PhoneNumber = "0987654321",
                            RegistryDate = new DateTime(2021, 10, 21, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(7534)
                        },
                        new
                        {
                            ID = new Guid("0a41dd28-da70-44b2-a372-5e9f688b3c09"),
                            AccName = "Taikhoan4",
                            Address = "Hưng Yên - Việt Nam",
                            DateOfBirth = new DateTime(1980, 9, 26, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(7539),
                            Domicile = "Việt nam",
                            Email = "Email.NguoiDung@mail.mail",
                            Name = "Người dùng 4",
                            PhoneNumber = "0987654321",
                            RegistryDate = new DateTime(2021, 10, 21, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(7541)
                        },
                        new
                        {
                            ID = new Guid("0bcf5595-2df8-4911-ad67-f63869034045"),
                            AccName = "Taikhoan5",
                            Address = "Hưng Yên - Việt Nam",
                            DateOfBirth = new DateTime(1980, 9, 26, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(7547),
                            Domicile = "Việt nam",
                            Email = "Email.NguoiDung@mail.mail",
                            Name = "Người dùng 5",
                            PhoneNumber = "0987654321",
                            RegistryDate = new DateTime(2021, 10, 21, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(7548)
                        },
                        new
                        {
                            ID = new Guid("82861ec6-f9b9-43f9-8379-967a14575bcc"),
                            AccName = "Taikhoan6",
                            Address = "Hưng Yên - Việt Nam",
                            DateOfBirth = new DateTime(1980, 9, 26, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(7566),
                            Domicile = "Việt nam",
                            Email = "Email.NguoiDung@mail.mail",
                            Name = "Người dùng 6",
                            PhoneNumber = "0987654321",
                            RegistryDate = new DateTime(2021, 10, 21, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(7568)
                        },
                        new
                        {
                            ID = new Guid("2a6c6b0d-c375-435a-b961-a8e1d1cfadc3"),
                            AccName = "Taikhoan7",
                            Address = "Hưng Yên - Việt Nam",
                            DateOfBirth = new DateTime(1980, 9, 26, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(7574),
                            Domicile = "Việt nam",
                            Email = "Email.NguoiDung@mail.mail",
                            Name = "Người dùng 7",
                            PhoneNumber = "0987654321",
                            RegistryDate = new DateTime(2021, 10, 21, 8, 40, 48, 344, DateTimeKind.Local).AddTicks(7575)
                        });
                });

            modelBuilder.Entity("Models.Entity.Article", b =>
                {
                    b.HasOne("Models.Entity.ArticleType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeID");

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
